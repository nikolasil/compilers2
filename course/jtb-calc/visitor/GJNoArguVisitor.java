//
// Generated by JTB 1.3.2 DIT@UoA patched
//

package visitor;
import syntaxtree.*;
import java.util.*;

/**
 * All GJ visitors with no argument must implement this interface.
 */

public interface GJNoArguVisitor<R> {

   //
   // GJ Auto class visitors with no argument
   //

   public R visit(NodeList n) ;
   public R visit(NodeListOptional n) ;
   public R visit(NodeOptional n) ;
   public R visit(NodeSequence n) ;
   public R visit(NodeToken n) ;

   //
   // User-generated visitor methods below
   //

   /**
    * f0 -> Exp()
    * f1 -> <EOF>
    */
   public R visit(Goal n);

   /**
    * f0 -> Term()
    * f1 -> [ Exp2() ]
    */
   public R visit(Exp n);

   /**
    * f0 -> PlusExp()
    *       | MinusExp()
    */
   public R visit(Exp2 n);

   /**
    * f0 -> "+"
    * f1 -> Term()
    * f2 -> [ Exp2() ]
    */
   public R visit(PlusExp n);

   /**
    * f0 -> "-"
    * f1 -> Term()
    * f2 -> [ Exp2() ]
    */
   public R visit(MinusExp n);

   /**
    * f0 -> Factor()
    * f1 -> [ Term2() ]
    */
   public R visit(Term n);

   /**
    * f0 -> TimesExp()
    *       | DivExp()
    */
   public R visit(Term2 n);

   /**
    * f0 -> "*"
    * f1 -> Factor()
    * f2 -> [ Term2() ]
    */
   public R visit(TimesExp n);

   /**
    * f0 -> "/"
    * f1 -> Factor()
    * f2 -> [ Term2() ]
    */
   public R visit(DivExp n);

   /**
    * f0 -> Num()
    *       | ParExp()
    */
   public R visit(Factor n);

   /**
    * f0 -> <NUMBER>
    */
   public R visit(Num n);

   /**
    * f0 -> "("
    * f1 -> Exp()
    * f2 -> ")"
    */
   public R visit(ParExp n);

}

