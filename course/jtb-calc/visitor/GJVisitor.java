//
// Generated by JTB 1.3.2 DIT@UoA patched
//

package visitor;
import syntaxtree.*;
import java.util.*;

/**
 * All GJ visitors must implement this interface.
 */

public interface GJVisitor<R,A> {

   //
   // GJ Auto class visitors
   //

   public R visit(NodeList n, A argu);
   public R visit(NodeListOptional n, A argu);
   public R visit(NodeOptional n, A argu);
   public R visit(NodeSequence n, A argu);
   public R visit(NodeToken n, A argu);

   //
   // User-generated visitor methods below
   //

   /**
    * f0 -> Exp()
    * f1 -> <EOF>
    */
   public R visit(Goal n, A argu);

   /**
    * f0 -> Term()
    * f1 -> [ Exp2() ]
    */
   public R visit(Exp n, A argu);

   /**
    * f0 -> PlusExp()
    *       | MinusExp()
    */
   public R visit(Exp2 n, A argu);

   /**
    * f0 -> "+"
    * f1 -> Term()
    * f2 -> [ Exp2() ]
    */
   public R visit(PlusExp n, A argu);

   /**
    * f0 -> "-"
    * f1 -> Term()
    * f2 -> [ Exp2() ]
    */
   public R visit(MinusExp n, A argu);

   /**
    * f0 -> Factor()
    * f1 -> [ Term2() ]
    */
   public R visit(Term n, A argu);

   /**
    * f0 -> TimesExp()
    *       | DivExp()
    */
   public R visit(Term2 n, A argu);

   /**
    * f0 -> "*"
    * f1 -> Factor()
    * f2 -> [ Term2() ]
    */
   public R visit(TimesExp n, A argu);

   /**
    * f0 -> "/"
    * f1 -> Factor()
    * f2 -> [ Term2() ]
    */
   public R visit(DivExp n, A argu);

   /**
    * f0 -> Num()
    *       | ParExp()
    */
   public R visit(Factor n, A argu);

   /**
    * f0 -> <NUMBER>
    */
   public R visit(Num n, A argu);

   /**
    * f0 -> "("
    * f1 -> Exp()
    * f2 -> ")"
    */
   public R visit(ParExp n, A argu);

}
